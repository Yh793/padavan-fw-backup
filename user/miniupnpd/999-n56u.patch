diff -urw miniupnpd-1.6.20120502/genconfig.sh miniupnpd-1.6.20120502.b/genconfig.sh
--- miniupnpd-1.6.20120502/genconfig.sh	2012-04-15 06:26:29.000000000 +0800
+++ miniupnpd-1.6.20120502.b/genconfig.sh	2012-05-03 02:23:54.212128921 +0800
@@ -62,12 +62,15 @@
 	OS_VERSION="Tomato $(cat ../shared/tomato_version)"
 fi
 
+# N56U special case
+OS_NAME=RT-N56U
+
 ${RM} ${CONFIGFILE}
 
 echo "/* MiniUPnP Project" >> ${CONFIGFILE}
 echo " * http://miniupnp.free.fr/ or http://miniupnp.tuxfamily.org/" >> ${CONFIGFILE}
 echo " * (c) 2006-2012 Thomas Bernard" >> ${CONFIGFILE}
-echo " * generated by $0 on `date` */" >> ${CONFIGFILE}
+echo " * generated by $0 on `LC_ALL=C date -u` */" >> ${CONFIGFILE}
 echo "#ifndef $CONFIGMACRO" >> ${CONFIGFILE}
 echo "#define $CONFIGMACRO" >> ${CONFIGFILE}
 echo "" >> ${CONFIGFILE}
@@ -236,6 +239,13 @@
 		echo "#endif" >> ${CONFIGFILE}
 		FW=netfilter
 		;;
+	RT-N56U)
+		OS_VERSION=1.1.1.8
+		OS_URL=http://code.google.com/p/rt-n56u/
+		echo "#define USE_NETFILTER 1" >> ${CONFIGFILE}
+		FW=netfilter
+		LEASEFILE=1
+		;;
 	Darwin)
 		echo "#define USE_IFACEWATCHER 1" >> ${CONFIGFILE}
 		FW=ipfw
@@ -303,7 +313,7 @@
 
 echo "/* Uncomment the following line to enable caching of results of" >> ${CONFIGFILE}
 echo " * the getifstats() function */" >> ${CONFIGFILE}
-echo "/*#define ENABLE_GETIFSTATS_CACHING*/" >> ${CONFIGFILE}
+echo "#define ENABLE_GETIFSTATS_CACHING" >> ${CONFIGFILE}
 echo "/* The cache duration is indicated in seconds */" >> ${CONFIGFILE}
 echo "#define GETIFSTATS_CACHING_DURATION 2" >> ${CONFIGFILE}
 echo "" >> ${CONFIGFILE}
@@ -371,7 +381,7 @@
 echo "" >> ${CONFIGFILE}
 
 echo "/* include interface name in pf and ipf rules */" >> ${CONFIGFILE}
-echo "#define USE_IFNAME_IN_RULES" >> ${CONFIGFILE}
+echo "/*#define USE_IFNAME_IN_RULES*/" >> ${CONFIGFILE}
 echo "" >> ${CONFIGFILE}
 
 echo "/* Experimental NFQUEUE support. */" >> ${CONFIGFILE}
diff -urw miniupnpd-1.6.20120502/getifaddr.c miniupnpd-1.6.20120502.b/getifaddr.c
--- miniupnpd-1.6.20120502/getifaddr.c	2012-03-06 04:37:13.000000000 +0800
+++ miniupnpd-1.6.20120502.b/getifaddr.c	2012-05-03 02:19:41.928304008 +0800
@@ -36,6 +36,7 @@
 	int ifrlen;
 	struct sockaddr_in * addr;
 	ifrlen = sizeof(ifr);
+	int ret = -1;
 
 	if(!ifname || ifname[0]=='\0')
 		return -1;
@@ -46,20 +47,28 @@
 		return -1;
 	}
 	strncpy(ifr.ifr_name, ifname, IFNAMSIZ);
+	if(ioctl(s, SIOCGIFFLAGS, &ifr) < 0)
+	{
+		syslog(LOG_DEBUG, "ioctl(s, SIOCGIFFLAGS, ...): %m");
+		goto err;
+	} else
+	if ((ifr.ifr_flags & IFF_UP) == 0)
+		goto err;
 	if(ioctl(s, SIOCGIFADDR, &ifr, &ifrlen) < 0)
 	{
-		syslog(LOG_ERR, "ioctl(s, SIOCGIFADDR, ...): %m");
-		close(s);
-		return -1;
+		syslog(LOG_DEBUG, "ioctl(s, SIOCGIFADDR, ...): %m");
+		goto err;
 	}
 	addr = (struct sockaddr_in *)&ifr.ifr_addr;
 	if(!inet_ntop(AF_INET, &addr->sin_addr, buf, len))
 	{
 		syslog(LOG_ERR, "inet_ntop(): %m");
-		close(s);
-		return -1;
+		goto err;
 	}
 	close(s);
+	ret = 0;
+ err:
+	return ret;
 #else /* ifndef USE_GETIFADDRS */
 	/* Works for all address families (both ip v4 and ip v6) */
 	struct ifaddrs * ifap;
@@ -95,8 +104,9 @@
 		}
 	}
 	freeifaddrs(ifap);
-#endif
+
 	return 0;
+#endif
 }
 
 #ifdef ENABLE_IPV6
diff -urw miniupnpd-1.6.20120502/linux/getifstats.c miniupnpd-1.6.20120502.b/linux/getifstats.c
--- miniupnpd-1.6.20120502/linux/getifstats.c	2012-04-07 01:47:58.000000000 +0800
+++ miniupnpd-1.6.20120502.b/linux/getifstats.c	2012-05-03 02:19:41.928304008 +0800
@@ -86,7 +86,9 @@
 		break;
 	}
 	fclose(f);
+#if 0 /* Disable get speed. In 2.6.21 kernel not supported this. */
 	/* get interface speed */
+	/* NB! some interfaces, like ppp, don't support speed queries */
 	snprintf(fname, sizeof(fname), "/sys/class/net/%s/speed", ifname);
 	f = fopen(fname, "r");
 	if(f) {
@@ -96,9 +98,8 @@
 				data->baudrate = 1000000*i;
 		}
 		fclose(f);
-	} else {
-		syslog(LOG_WARNING, "cannot read %s file : %m", fname);
 	}
+#endif
 #ifdef ENABLE_GETIFSTATS_CACHING
 	if(r==0 && current_time!=((time_t)-1)) {
 		/* cache the new data */
Только в miniupnpd-1.6.20120502.b/linux: getifstats.c.orig
diff -urw miniupnpd-1.6.20120502/Makefile.linux miniupnpd-1.6.20120502.b/Makefile.linux
--- miniupnpd-1.6.20120502/Makefile.linux	2012-05-02 04:13:51.000000000 +0800
+++ miniupnpd-1.6.20120502.b/Makefile.linux	2012-05-03 05:51:17.324113036 +0800
@@ -21,19 +21,20 @@
 # $ IPTABLESPATH=/path/to/iptables-1.4.1 make -f Makefile.linux
 #
 #CFLAGS = -O -g -DDEBUG
-CFLAGS ?= -Os
-CFLAGS += -fno-strict-aliasing
-CFLAGS += -fno-common
+CFLAGS ?= -Os -Wall
+CFLAGS += -fno-strict-aliasing -Wstrict-prototypes
 CFLAGS += -D_GNU_SOURCE
-CFLAGS += -Wall
-CFLAGS += -Wextra -Wstrict-prototypes -Wdeclaration-after-statement
-CFLAGS += -ansi
 CC ?= gcc
 RM = rm -f
 INSTALL = install
 STRIP ?= strip
 CP = cp
 
+CFLAGS += -ffunction-sections -fdata-sections
+LDFLAGS += -Wl,--gc-sections
+
+IPTABLESPATH=../../iptables
+LIBS = $(IPTABLESPATH)/libiptc/libiptc.a
 
 INSTALLPREFIX ?= $(PREFIX)/usr
 SBININSTALLDIR = $(INSTALLPREFIX)/sbin
@@ -51,15 +52,7 @@
 
 ALLOBJS = $(BASEOBJS) $(LNXOBJS) $(NETFILTEROBJS)
 
-ifeq "$(wildcard /etc/gentoo-release )" ""
 LIBS ?= -liptc
-else # gentoo
-# the following is better, at least on gentoo with iptables 1.4.6
-# see http://miniupnp.tuxfamily.org/forum/viewtopic.php?p=1618
-# and http://miniupnp.tuxfamily.org/forum/viewtopic.php?p=2183
-LIBS ?= -lip4tc
-CFLAGS := -DIPTABLES_143 $(CFLAGS)
-endif
 
 ARCH ?= $(shell uname -m | grep -q "x86_64" && echo 64)
 ifdef IPTABLESPATH
diff -urw miniupnpd-1.6.20120502/minissdp.c miniupnpd-1.6.20120502.b/minissdp.c
--- miniupnpd-1.6.20120502/minissdp.c	2012-04-30 21:46:28.000000000 +0800
+++ miniupnpd-1.6.20120502.b/minissdp.c	2012-05-03 02:19:41.932126771 +0800
@@ -104,6 +104,7 @@
 	}
 
 	memset(&sockname, 0, sizeof(struct sockaddr_storage));
+#ifdef ENABLE_IPV6
 	if(ipv6) {
 		struct sockaddr_in6 * saddr = (struct sockaddr_in6 *)&sockname;
 		saddr->sin6_family = AF_INET6;
@@ -111,6 +112,7 @@
 		saddr->sin6_addr = in6addr_any;
 		sockname_len = sizeof(struct sockaddr_in6);
 	} else {
+#endif
 		struct sockaddr_in * saddr = (struct sockaddr_in *)&sockname;
 		saddr->sin_family = AF_INET;
 		saddr->sin_port = htons(SSDP_PORT);
@@ -119,7 +121,9 @@
 		saddr->sin_addr.s_addr = htonl(INADDR_ANY);
 		/*saddr->sin_addr.s_addr = inet_addr(ifaddr);*/
 		sockname_len = sizeof(struct sockaddr_in);
+#ifdef ENABLE_IPV6
 	}
+#endif
 
 	if(setsockopt(s, SOL_SOCKET, SO_REUSEADDR, &j, sizeof(j)) < 0)
 	{
@@ -578,7 +582,8 @@
 				}
 				if (lan_addr == NULL)
 				{
-					syslog(LOG_ERR, "Can't find in which sub network the client is");
+					syslog(LOG_INFO, "Can't find in which sub network the client %s is",
+						sender_str);
 					return;
 				}
 				announced_host = lan_addr->str;
diff -urw miniupnpd-1.6.20120502/miniupnpd.c miniupnpd-1.6.20120502.b/miniupnpd.c
--- miniupnpd-1.6.20120502/miniupnpd.c	2012-05-02 04:13:51.000000000 +0800
+++ miniupnpd-1.6.20120502.b/miniupnpd.c	2012-05-03 02:19:41.932126771 +0800
@@ -1009,6 +1009,7 @@
 	}
 
 	openlog("miniupnpd", openlog_option, LOG_MINIUPNPD);
+	syslog(LOG_INFO, "version " MINIUPNPD_VERSION " started");
 
 	if(!debug_flag)
 	{
@@ -1169,7 +1170,6 @@
 	struct rule_state * rule_list = 0;
 	struct timeval checktime = {0, 0};
 	struct lan_addr_s * lan_addr;
-	syslog(LOG_INFO, "SNet version started");
 
 	if(init(argc, argv, &v) != 0)
 		return 1;
@@ -1332,6 +1332,9 @@
 			}
 #endif
 			should_send_public_address_change_notif = 0;
+#ifdef ENABLE_LEASEFILE
+			reload_from_lease_file();
+#endif
 		}
 		/* Check if we need to send SSDP NOTIFY messages and do it if
 		 * needed */
diff -urw miniupnpd-1.6.20120502/natpmp.c miniupnpd-1.6.20120502.b/natpmp.c
--- miniupnpd-1.6.20120502/natpmp.c	2012-05-01 17:11:15.000000000 +0800
+++ miniupnpd-1.6.20120502.b/natpmp.c	2012-05-03 02:19:41.932126771 +0800
@@ -225,7 +225,7 @@
 					r = _upnp_delete_redir(eport, proto);
 					/*syslog(LOG_DEBUG, "%hu %d r=%d", eport, proto, r);*/
 					if(r<0) {
-						syslog(LOG_ERR, "Failed to remove NAT-PMP mapping eport %hu, protocol %s",
+						syslog(LOG_INFO, "Failed to remove NAT-PMP mapping eport %hu, protocol %s",
 						       eport, (proto==IPPROTO_TCP)?"TCP":"UDP");
 						resp[3] = 2;	/* Not Authorized/Refused */
 					}
diff -urw miniupnpd-1.6.20120502/netfilter/iptcrdr.c miniupnpd-1.6.20120502.b/netfilter/iptcrdr.c
--- miniupnpd-1.6.20120502/netfilter/iptcrdr.c	2012-05-01 17:11:16.000000000 +0800
+++ miniupnpd-1.6.20120502.b/netfilter/iptcrdr.c	2012-05-03 02:19:41.932126771 +0800
@@ -13,7 +13,6 @@
 #include <netinet/in.h>
 #include <arpa/inet.h>
 #include <dlfcn.h>
-#include <xtables.h>
 #include <libiptc/libiptc.h>
 
 #include <linux/version.h>
@@ -40,7 +39,7 @@
 #else
 /* IPTABLES API version < 1.4.3 */
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,22)
-#include <linux/netfilter_ipv4/ip_nat.h>
+#include <linux/netfilter/nf_nat.h>
 #else
 #if 0
 #include <linux/netfilter/nf_nat.h>
diff -urw miniupnpd-1.6.20120502/upnpdescstrings.h miniupnpd-1.6.20120502.b/upnpdescstrings.h
--- miniupnpd-1.6.20120502/upnpdescstrings.h	2012-02-05 07:05:26.000000000 +0800
+++ miniupnpd-1.6.20120502.b/upnpdescstrings.h	2012-05-03 02:19:41.932126771 +0800
@@ -11,10 +11,10 @@
 
 /* strings used in the root device xml description */
 /*#define ROOTDEV_FRIENDLYNAME		OS_NAME " router"*/
-#define ROOTDEV_MANUFACTURER		OS_NAME
-#define ROOTDEV_MANUFACTURERURL		OS_URL
-#define ROOTDEV_MODELNAME			OS_NAME " router"
-#define ROOTDEV_MODELDESCRIPTION	OS_NAME " router"
+#define ROOTDEV_MANUFACTURER		"ASUSTek Computer Inc."
+#define ROOTDEV_MANUFACTURERURL		"http://www.asus.com/"
+#define ROOTDEV_MODELNAME		"Wireless Router"
+#define ROOTDEV_MODELDESCRIPTION	OS_NAME " Router"
 #define ROOTDEV_MODELURL			OS_URL
 
 #define WANDEV_FRIENDLYNAME			"WANDevice"
diff -urw miniupnpd-1.6.20120502/upnpglobalvars.c miniupnpd-1.6.20120502.b/upnpglobalvars.c
--- miniupnpd-1.6.20120502/upnpglobalvars.c	2012-04-26 22:35:49.000000000 +0800
+++ miniupnpd-1.6.20120502.b/upnpglobalvars.c	2012-05-03 02:20:38.392878623 +0800
@@ -73,10 +73,10 @@
 #ifdef USE_NETFILTER
 /* chain name to use, both in the nat table
  * and the filter table */
-const char * miniupnpd_nat_chain = "MINIUPNPD";
-const char * miniupnpd_forward_chain = "MINIUPNPD";
+const char * miniupnpd_nat_chain = "UPNP";
+const char * miniupnpd_forward_chain = "UPNP";
 #ifdef ENABLE_6FC_SERVICE
-const char * miniupnpd_v6_filter_chain = "MINIUPNPD";
+const char * miniupnpd_v6_filter_chain = "UPNP";
 #endif
 
 #endif
diff -urw miniupnpd-1.6.20120502/upnphttp.c miniupnpd-1.6.20120502.b/upnphttp.c
--- miniupnpd-1.6.20120502/upnphttp.c	2012-04-30 21:46:29.000000000 +0800
+++ miniupnpd-1.6.20120502.b/upnphttp.c	2012-05-03 02:48:08.617007564 +0800
@@ -12,6 +12,7 @@
 #include <string.h>
 #include <sys/types.h>
 #include <sys/socket.h>
+#include <arpa/inet.h>
 #include <sys/param.h>
 #include <netinet/in.h>
 #include <arpa/inet.h>
@@ -488,7 +489,7 @@
 #endif
 		else
 		{
-			syslog(LOG_NOTICE, "%s not found, responding ERROR 404", HttpUrl);
+			syslog(LOG_INFO, "%s not found, responding ERROR 404", HttpUrl);
 			Send404(h);
 		}
 	}
@@ -543,7 +544,8 @@
 		}
 		else if(n==0)
 		{
-			syslog(LOG_WARNING, "HTTP Connection closed unexpectedly");
+			syslog(LOG_WARNING, "HTTP Connection from %s closed unexpectedly",
+				inet_ntoa(h->clientaddr));
 			h->state = EToDelete;
 		}
 		else
@@ -579,7 +581,8 @@
 		}
 		else if(n==0)
 		{
-			syslog(LOG_WARNING, "HTTP Connection closed inexpectedly");
+			syslog(LOG_WARNING, "HTTP Connection from %s closed unexpectedly",
+				inet_ntoa(h->clientaddr));
 			h->state = EToDelete;
 		}
 		else
diff -urw miniupnpd-1.6.20120502/upnpredirect.c miniupnpd-1.6.20120502.b/upnpredirect.c
--- miniupnpd-1.6.20120502/upnpredirect.c	2012-05-02 04:11:50.000000000 +0800
+++ miniupnpd-1.6.20120502.b/upnpredirect.c	2012-05-03 02:19:41.932126771 +0800
@@ -165,7 +165,7 @@
 	if(!lease_file) return -1;
 	fd = fopen( lease_file, "r");
 	if (fd==NULL) {
-		syslog(LOG_ERR, "could not open lease file: %s", lease_file);
+		syslog(LOG_DEBUG, "could not open lease file: %s", lease_file);
 		return -1;
 	}
 	if(unlink(lease_file) < 0) {
@@ -287,14 +287,20 @@
 		 * xbox 360 does not keep track of the port it redirects and will
 		 * redirect another port when receiving ConflictInMappingEntry */
 		if(strcmp(iaddr, iaddr_old)==0 && iport==iport_old) {
-			syslog(LOG_INFO, "ignoring redirect request as it matches existing redirect");
+			/* redirection allready exists */
+			syslog(LOG_INFO, "port %hu %s already redirected to %s:%hu, replacing", eport, (proto==IPPROTO_TCP)?"tcp":"udp", iaddr_old, iport_old);
+			/* remove and then add again */
+			if(_upnp_delete_redir(eport, proto) < 0) {
+				syslog(LOG_ERR, "failed to remove port mapping");
+				return 0;
+			}
 		} else {
 
 			syslog(LOG_INFO, "port %hu protocol %s already redirected to %s:%hu",
 				eport, protocol, iaddr_old, iport_old);
 			return -2;
 		}
-	} else {
+	}
 		timestamp = (leaseduration > 0) ? time(NULL) + leaseduration : 0;
 		syslog(LOG_INFO, "redirecting port %hu to %s:%hu protocol %s for: %s",
 			eport, iaddr, iport, protocol, desc);
@@ -302,9 +308,6 @@
 		                              desc, timestamp);
 	}
 
-	return 0;
-}
-
 int
 upnp_redirect_internal(const char * rhost, unsigned short eport,
                        const char * iaddr, unsigned short iport,
@@ -511,7 +514,7 @@
 	{
 		if(tmp->to_remove)
 		{
-			syslog(LOG_NOTICE, "remove port mapping %hu %s because it has expired",
+			syslog(LOG_INFO, "remove port mapping %hu %s because it has expired",
 			       tmp->eport, (tmp->proto==IPPROTO_TCP)?"TCP":"UDP");
 			_upnp_delete_redir(tmp->eport, tmp->proto);
 			*p = tmp->next;
@@ -553,7 +556,7 @@
 		{
 			if(packets == list->packets && bytes == list->bytes)
 			{
-				_upnp_delete_redir(list->eport, list->proto);
+				if(_upnp_delete_redir(list->eport, list->proto) >= 0)
 				n++;
 			}
 		}
